---
# User-defined dict
grafana: {}
# Internal dict to merge with user one
grafana_data:
  # Host dir to store grafana data
  admin_user: admin
  admin_password: password
  # Docker labels
  docker_labels: []

grafana_docker_image: "grafana/grafana"
grafana_port: "3000"
grafana_storage: /var/grafana/storage
grafana_provisioning_dir: /var/grafana/provisioning
grafana_config_ini_directory: /var/grafana
# Dashboards to provision. Allows to specify array of fileglobs
# to provision. Each fileglob will be handled independent
grafana_provisioning_dashboards:
  - "*"
grafana_ldap_host_config_path: /var/grafana/config
grafana_volumes:
  - "{{ grafana_storage }}:/var/lib/grafana"
  - "{{ grafana_config_ini_directory }}/grafana.ini:/etc/grafana/grafana.ini"
  - "{{ grafana_provisioning_dir }}:/etc/grafana/provisioning"
  - "{{ grafana_ldap_host_config_path }}:{{ grafana_ldap_config_path }}"
grafana_external_volumes: {}

# Docker-related networking settings
# grafana_docker_network_name: prom_network
grafana_container_networks:
  default:
    external:
      name: prom_network

grafana_container_name: "grafana"
grafana_docker_hostname: "grafana"

grafana_user_list: []
  # - name: "Mrs. X"
  #   email: "x@gmail.com"
  #   password: "passwordX"

grafana_url: "http://127.0.0.1:{{ grafana_port }}"
grafana_datasources:
  - name: Prometheus
    url: http://victoriametrics:8428
    type: prometheus
    access: proxy
    isDefault: true

grafana_loki_install: false
grafana_loki_storage: /var/loki/
grafana_loki_directory_owner: 10001
grafana_loki_directory_group: 10001

grafana_ldap_auth_enabled: false
grafana_ldap_root: "dc=example,dc=com"
grafana_ldap_config_path: /etc/grafana/config
grafana_ldap_allow_sign_up: true
grafana_ldap_servers:
  - host: ldap01.example.com # required
    port: 389
    use_ssl: "false"
    start_tls: "false"
    ssl_skip_verify: "false"
    bind_dn: "cn=reader,{{ grafana_ldap_root }}"
    bind_password: "grafana"
    timeout: "10"
    search_filter: "(&(uid=%s)(objectClass=posixAccount)"
    search_base_dns: "ou=users,{{ grafana_ldap_root }}"
    attributes:
      name: "givenName"
      surname: "sn"
      username: "cn"
      member_of: "memberOf"
      email: "mail"
    # The first group mapping will be used
    # https://grafana.com/docs/grafana/latest/setup-grafana/configure-security/configure-authentication/ldap/#group-mappings
    group_mappings:
      - group_dn: "cn=grafana.superadmins,ou=groups,{{ grafana_ldap_root }}"
        org_role: "Admin"
        org_id: "1"
        grafana_admin: true
      - group_dn: "cn=grafana.viewers,ou=groups,{{ grafana_ldap_root }}"
        org_role: "Viewer"

grafana_stack_name: victoriametrics
grafana_swarm_cluster: false
grafana_swarm_deploy:
  mode: replicated
  replicas: 1
  placement:
    constraints:
      - node.labels.victoriametrics == true

# example grafana_swarm_deploy:
#   mode: replicated
#   replicas: 1
#   update_config:
#     order: start-first
#   placement:
#     max_replicas_per_node: 1
#     constraints:
#       - node.labels.victoriametrics == true
#   resources:
#     limits:
#       memory: 512M
#     reservations:
#       memory: 256M

# renderer options
grafana_setup_renderer: false
grafana_renderer_image: grafana/grafana-image-renderer:3.11.6
grafana_renderer_hostname: grafana-renderer
grafana_renderer_ports: 8081
# Place your grafana token here
# Refer to docs for more information: 
# https://grafana.com/docs/grafana-cloud/account-management/authentication-and-permissions/access-policies/authorize-services/
grafana_renderer_token: None 
grafana_renderer_config_dir: /var/grafana/renderer
